{
    "Name": "mathd_algebra_153",
    "Statement": "theorem mathd_algebra_153\n  (n : ℝ)\n  (h₀ : n = 1 / 3) :\n  Int.floor (10 * n) + Int.floor (100 * n) + Int.floor (1000 * n) + Int.floor (10000 * n) = 3702 :=",
    "Proof": "theorem mathd_algebra_153\n  (n : ℝ)\n  (h₀ : n = 1 / 3) :\n  Int.floor (10 * n) + Int.floor (100 * n) + Int.floor (1000 * n) + Int.floor (10000 * n) = 3702 := sorry",
    "File_path": "https://github.com/yangky11/miniF2F-lean4",
    "Commit": "3c2aaced70a9b82218bef2aac766362ff4f943ae",
    "Informal_statement": "We write $\\lfloor X \\rfloor$ to mean the greatest integer less than or equal to $X$; for example $\\lfloor 3\\frac{1}{2} \\rfloor = 3$. If $N = \\frac{1}{3}$, what is the value of $\\lfloor 10N \\rfloor + \\lfloor 100N \\rfloor + \\lfloor 1000N \\rfloor + \\lfloor 10,000N \\rfloor$? Show that it is 3702.",
    "Informal_proof": "Substituting, we get:\n\n$\\lfloor 10N \\rfloor$ = $\\lfloor \\frac {10}{3} \\rfloor = 3$\n\n$\\lfloor 100N \\rfloor$ = $\\lfloor \\frac {100}{3} \\rfloor = 33$\n\n$\\lfloor 1000N \\rfloor$ = $\\lfloor \\frac {1000}{3} \\rfloor = 333$\n\n$\\lfloor 10000N \\rfloor$ = $\\lfloor \\frac {10000}{3} \\rfloor = 3333$\n\nAdding these values, we get $3+33+333+3333 = 3702$",
    "NL": "We write $\\lfloor X \\rfloor$ to mean the greatest integer less than or equal to $X$; for example $\\lfloor 3\\frac{1}{2} \\rfloor = 3$. If $N = \\frac{1}{3}$, what is the value of $\\lfloor 10N \\rfloor + \\lfloor 100N \\rfloor + \\lfloor 1000N \\rfloor + \\lfloor 10,000N \\rfloor$? Show that it is 3702.\n\nSubstituting, we get:\n\n$\\lfloor 10N \\rfloor$ = $\\lfloor \\frac {10}{3} \\rfloor = 3$\n\n$\\lfloor 100N \\rfloor$ = $\\lfloor \\frac {100}{3} \\rfloor = 33$\n\n$\\lfloor 1000N \\rfloor$ = $\\lfloor \\frac {1000}{3} \\rfloor = 333$\n\n$\\lfloor 10000N \\rfloor$ = $\\lfloor \\frac {10000}{3} \\rfloor = 3333$\n\nAdding these values, we get $3+33+333+3333 = 3702$",
    "FL_statement": "theorem mathd_algebra_153\n  (n : ℝ)\n  (h₀ : n = 1 / 3) :\n  Int.floor (10 * n) + Int.floor (100 * n) + Int.floor (1000 * n) + Int.floor (10000 * n) = 3702 :=",
    "Generated_proof": [
        "-- Let's first define the function `Int.floor` which computes the floor of a number.\n-- It takes a real number as input and returns the greatest integer less than or equal to that number.\n-- For example, `Int.floor (3.5)` would return `3`.\n\n-- Now let's define the variable `n` and assume that it is equal to `1/3`.\n-- We'll also introduce an assumption `h₀` stating that `n = 1/3`.\n\n-- Our goal is to calculate the sum of the floors of the multiples of `n` between 10 and 10,000.\n-- That is, we want to compute `Int.floor (10 * n) + Int.floor (100 * n) +... + Int.floor (10000 * n)`.\n\n-- To achieve this, we start by calculating `Int.floor (10 * n)`, which is equivalent to `Int.floor ((10 * 1/3))`. Using the properties of multiplication and addition, we can rewrite this as `Int.floor ((10/3))`, which further reduces to `Int.floor (3.333...)`. As `3.333...` is greater than `3`, we know that `Int.floor (3.333...) = 3`.\n\n-- Similarly, we can calculate `Int.floor (100 * n)` as `Int.floor ((100 * 1/3))`, which simplifies to `Int.floor ((100/3))`, eventually resulting in `Int.floor (33.333...) = 33`.\n\n-- Continuing this process, we obtain `Int.floor (1000 * n) = 333`, `Int.floor (10000 * n) = 3333`, and finally adding these four values yields `3702`.\n\n-- Here's the formalization of this calculation in Lean4:\n-- "
    ]
}