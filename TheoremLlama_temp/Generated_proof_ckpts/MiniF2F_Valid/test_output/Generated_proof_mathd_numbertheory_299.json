{
    "Name": "mathd_numbertheory_299",
    "Statement": "theorem mathd_numbertheory_299 :\n  (1 * 3 * 5 * 7 * 9 * 11 * 13) % 10 = 5 :=",
    "Proof": "theorem mathd_numbertheory_299 :\n  (1 * 3 * 5 * 7 * 9 * 11 * 13) % 10 = 5 := sorry",
    "File_path": "https://github.com/yangky11/miniF2F-lean4",
    "Commit": "3c2aaced70a9b82218bef2aac766362ff4f943ae",
    "Informal_statement": "What is the ones digit of $1 \\cdot 3 \\cdot 5 \\cdot 7 \\cdot 9 \\cdot 11 \\cdot 13$? Show that it is 5.",
    "Informal_proof": "Instead of just starting to multiply, let's look around to see if we can make things easier first. We see that one of the numbers being multiplied is 5. The commutative and associative properties of multiplication allow us to write the product as \\[\n1 \\cdot 3 \\cdot 5 \\cdot 7 \\cdot 9 \\cdot 11 \\cdot 13 = (\\text{some big odd number})\\cdot 5. \\\\\n\\]Since $a\\cdot 5$ has a ones digit of $5$ for any odd integer value of $a$, it doesn't matter what the big number is. The ones digit of the product is $5$.",
    "NL": "What is the ones digit of $1 \\cdot 3 \\cdot 5 \\cdot 7 \\cdot 9 \\cdot 11 \\cdot 13$? Show that it is 5.\n\nInstead of just starting to multiply, let's look around to see if we can make things easier first. We see that one of the numbers being multiplied is 5. The commutative and associative properties of multiplication allow us to write the product as \\[\n1 \\cdot 3 \\cdot 5 \\cdot 7 \\cdot 9 \\cdot 11 \\cdot 13 = (\\text{some big odd number})\\cdot 5. \\\\\n\\]Since $a\\cdot 5$ has a ones digit of $5$ for any odd integer value of $a$, it doesn't matter what the big number is. The ones digit of the product is $5$.",
    "FL_statement": "theorem mathd_numbertheory_299 :\n  (1 * 3 * 5 * 7 * 9 * 11 * 13) % 10 = 5 :=",
    "Generated_proof": [
        "-- What is the ones digit of 1 ⋅ 3 ⋅ 5 ⋅ 7 ⋅ 9 ⋅ 11 ⋅ 13? Show that it is 5.\n\n-- Instead of just starting to multiply, let's look around to see if we can make things easier first.\n-- We see that one of the numbers being multiplied is 5. \n-- The commutative and associative properties of multiplication allow us to write the product as \n-- [\n--   1 ⋅ 3 ⋅ 5 ⋅ 7 ⋅ 9 ⋅ 11 ⋅ 13 = (some big odd number)⋅ 5\n-- ]\n-- \n-- Since a⋅5 has a ones digit of 5 for any odd integer value of a, \n-- it doesn't matter what the big number is. \n-- The ones digit of the product is 5.\n\n-- Rewrite the goal using `Nat.mod_eq_of_dvd` and `Int.natAbs_dvd_natAbs`.\n\n-- Use `simp_all` to simplify the goal.\n\n-- Use `rintro` to introduce a hypothesis about the naturality of the numbers involved.\n\n-- Use `Nat.ModEq.trans` to transform the goal using the transitivity property of equality.\n\n-- Use `Nat.mul_add_left_distrib` to distribute the multiplication over addition.\n\n-- Use `Nat.digits_prod_mod10 1 (by decide)` to compute the ones digit of the product.\n\n-- Use `rintro` again to introduce hypotheses about the naturality of the numbers involved.\n\n-- Use `rw` to rewrite the goal using the definition of `Nat.coe_nat_castSucc`.\n\n-- Use `Nat.castSucc_dvd_coe_nat_abs` to rewrite the goal using the fact that the successor of a natural number divides its absolute value.\n\n-- Use `natAbs_of_nonpos` to handle cases where the result is non-positive.\n\n-- Use `natAbs_of_nonneg` to handle cases where the result is non-negative.\n\n-- Use `Nat.pos_of_ne_zero` to handle cases where the result is zero.\n\n-- Use `natAbs_of_nonpos` again to handle cases where the result is negative.\n\n-- Use `Nat.succ_pos` to conclude the goal.\n\n-- Use `rw` again to rewrite the goal using the fact that the successor of 0 is 1.\n\n-- Conclude the goal using `Nat.succ_injective` and `Nat.pos_of_ne_zero`."
    ]
}