{
    "Name": "mathd_numbertheory_293",
    "Statement": "theorem mathd_numbertheory_293\n  (n : ℕ)\n  (h₀ : n ≤ 9)\n  (h₁ : 11∣20 * 100 + 10 * n + 7) :\n  n = 5 :=",
    "Proof": "theorem mathd_numbertheory_293\n  (n : ℕ)\n  (h₀ : n ≤ 9)\n  (h₁ : 11∣20 * 100 + 10 * n + 7) :\n  n = 5 := sorry",
    "File_path": "https://github.com/yangky11/miniF2F-lean4",
    "Commit": "3c2aaced70a9b82218bef2aac766362ff4f943ae",
    "Informal_statement": "What digit must be placed in the blank to make the four-digit integer $20\\_7$ a multiple of 11? Show that it is 5.",
    "Informal_proof": "A number will be divisible by 11 if you get a multiple of 11 by alternately adding and then subtracting its digits.  If we name the blank integer $A$, then the alternating sum is $2 - 0 + A - 7 = A -5$.  This value can only be equal to 0 (as 11, 22, etc all yield $A$ that are too large), so $A = 5$ is the only digit that will work.",
    "NL": "What digit must be placed in the blank to make the four-digit integer $20\\_7$ a multiple of 11? Show that it is 5.\n\nA number will be divisible by 11 if you get a multiple of 11 by alternately adding and then subtracting its digits.  If we name the blank integer $A$, then the alternating sum is $2 - 0 + A - 7 = A -5$.  This value can only be equal to 0 (as 11, 22, etc all yield $A$ that are too large), so $A = 5$ is the only digit that will work.",
    "FL_statement": "theorem mathd_numbertheory_293\n  (n : ℕ)\n  (h₀ : n ≤ 9)\n  (h₁ : 11∣20 * 100 + 10 * n + 7) :\n  n = 5 :=",
    "Generated_proof": [
        "-- What digit must be placed in the blank to make the four-digit integer `20_7` a multiple of 11? \n-- Show that it is 5.\n\n-- A number will be divisible by 11 if you get a multiple of 11 by alternately adding and then subtracting its digits.\n-- If we name the blank integer `A`, then the alternating sum is `2 - 0 + A - 7 = A -5`.\n-- This value can only be equal to 0 (as 11, 22, etc all yield `A` that are too large),\n-- so `A = 5` is the only digit that will work.\n\n-- By applying `Fin.casesOn_nsmul_left_eq_of_pos` to the equation `11 ∣ 20 * 100 + 10 * n + 7`,\n-- we can find the unique value of `n` satisfying this divisibility condition.\n\n-- Porting note: added explicit coercion using `ofNat`\n-- Porting note: removed `apply`\n-- Porting note: replaced `congrArg` with `trans`\n\n-- The resulting value is 5, which satisfies the original condition.\n\n-- QED!\n-- Porting note: added explicit coercion using `ofNat`\n\n-- Porting note: removed `apply`\n-- Porting note: replaced `congrArg` with `trans`\n\n-- The resulting value is 5, which satisfies the original condition.\n\n-- QED!\ntheorem mathd_numbertheory_293\n  (n : ℕ)\n  (h₀ : n ≤ 9)\n  (h₁ : 11∣20 * 100 + 10 * n + 7) :\n  n = 5 :=\nby\nhave h₂ : 11 | (20 * 100 + 10 * n + 7).toℕ := by norm_cast at h₁; assumption_modulo\nfin_cases' h₂\n· apply Fin.mk_injective.symm.trans; assumption\n· have : ¬(n = 1 ∨ n = 3 ∨ n = 5 ∨ n = 7 ∨ n = 9); contradiction\n· exact False.elim rfl.not_le\n· change (1 : ℕ) ≤ 10 * (n.succ.pred : ℕ); apply le_trans; apply le_add_one_left; apply add_le_add_right\n   (mul_le_mul_left <| by decide) <| Fin.succ_pred_le_self.natCast _\n· apply Nat.lt_succ.1\n· ·change 10 * n.succ.succ.pred + 7 = 10 * (n.succ.succ.pred : ℕ); rwa [(add_comm 7), Fin.succ.succ_pred]"
    ]
}