{
    "Name": "amc12a_2020_p10",
    "Statement": "theorem amc12a_2020_p10\n  (n : ℕ)\n  (h₀ : 0 < n)\n  (h₁ : Real.logb 2 (Real.logb 16 n) = Real.logb 4 (Real.logb 4 n)) :\n  (Nat.digits 10 n).sum = 13 :=",
    "Proof": "theorem amc12a_2020_p10\n  (n : ℕ)\n  (h₀ : 0 < n)\n  (h₁ : Real.logb 2 (Real.logb 16 n) = Real.logb 4 (Real.logb 4 n)) :\n  (Nat.digits 10 n).sum = 13 := sorry",
    "File_path": "https://github.com/yangky11/miniF2F-lean4",
    "Commit": "3c2aaced70a9b82218bef2aac766362ff4f943ae",
    "Informal_statement": "There is a unique positive integer $n$ such that$\\log_2{(\\log_{16}{n})} = \\log_4{(\\log_4{n})}.$What is the sum of the digits of $n?$\n\n$\\textbf{(A) } 4 \\qquad \\textbf{(B) } 7 \\qquad \\textbf{(C) } 8 \\qquad \\textbf{(D) } 11 \\qquad \\textbf{(E) } 13$ Show that it is \\textbf{(E) } 13.",
    "Informal_proof": "Any logarithm in the form $\\log_{a^b} c = \\frac{1}{b} \\log_a c.$ This can be proved easily by using change of base formula to base $a.$\n\nSo, the original equation $\\log_2{(\\log_{2^4}{n})} = \\log_{2^2}{(\\log_{2^2}{n})}$ becomes $\\log_2\\left({\\frac{1}{4}\\log_{2}{n}}\\right) = \\frac{1}{2}\\log_2\\left({\\frac{1}{2}\\log_2{n}}\\right).$\nUsing log property of addition, we expand both sides and then simplify:\n$\\begin{align*}\n\\log_2{\\frac{1}{4}}+\\log_2{(\\log_{2}{n}}) &= \\frac{1}{2}\\left[\\log_2{\\frac{1}{2}} +\\log_{2}{(\\log_2{n})}\\right] \\\\\n\\log_2{\\frac{1}{4}}+\\log_2{(\\log_{2}{n}}) &= \\frac{1}{2}\\left[-1 +\\log_{2}{(\\log_2{n})}\\right] \\\\\n-2+\\log_2{(\\log_{2}{n}}) &= -\\frac{1}{2}+ \\frac{1}{2}(\\log_{2}{(\\log_2{n})}).\n\\end{align*}$\nSubtracting $\\frac{1}{2}(\\log_{2}{(\\log_2{n})})$ from both sides and adding $2$ to both sides gives us $\\frac{1}{2}(\\log_{2}{(\\log_2{n})}) = \\frac{3}{2}.$\nMultiplying by $2,$ exponentiating, and simplifying gives us\n$\\begin{align*}\n\\log_{2}{(\\log_2{n})} &= 3 \\\\\n\\log_2{n}&=8 \\\\\nn&=256.\n\\end{align*}$\nAdding the digits together, we have $2+5+6=\\textbf{(E) } 13.$ ",
    "NL": "There is a unique positive integer $n$ such that$\\log_2{(\\log_{16}{n})} = \\log_4{(\\log_4{n})}.$What is the sum of the digits of $n?$\n\n$\\textbf{(A) } 4 \\qquad \\textbf{(B) } 7 \\qquad \\textbf{(C) } 8 \\qquad \\textbf{(D) } 11 \\qquad \\textbf{(E) } 13$ Show that it is \\textbf{(E) } 13.\n\nAny logarithm in the form $\\log_{a^b} c = \\frac{1}{b} \\log_a c.$ This can be proved easily by using change of base formula to base $a.$\n\nSo, the original equation $\\log_2{(\\log_{2^4}{n})} = \\log_{2^2}{(\\log_{2^2}{n})}$ becomes $\\log_2\\left({\\frac{1}{4}\\log_{2}{n}}\\right) = \\frac{1}{2}\\log_2\\left({\\frac{1}{2}\\log_2{n}}\\right).$\nUsing log property of addition, we expand both sides and then simplify:\n$\\begin{align*}\n\\log_2{\\frac{1}{4}}+\\log_2{(\\log_{2}{n}}) &= \\frac{1}{2}\\left[\\log_2{\\frac{1}{2}} +\\log_{2}{(\\log_2{n})}\\right] \\\\\n\\log_2{\\frac{1}{4}}+\\log_2{(\\log_{2}{n}}) &= \\frac{1}{2}\\left[-1 +\\log_{2}{(\\log_2{n})}\\right] \\\\\n-2+\\log_2{(\\log_{2}{n}}) &= -\\frac{1}{2}+ \\frac{1}{2}(\\log_{2}{(\\log_2{n})}).\n\\end{align*}$\nSubtracting $\\frac{1}{2}(\\log_{2}{(\\log_2{n})})$ from both sides and adding $2$ to both sides gives us $\\frac{1}{2}(\\log_{2}{(\\log_2{n})}) = \\frac{3}{2}.$\nMultiplying by $2,$ exponentiating, and simplifying gives us\n$\\begin{align*}\n\\log_{2}{(\\log_2{n})} &= 3 \\\\\n\\log_2{n}&=8 \\\\\nn&=256.\n\\end{align*}$\nAdding the digits together, we have $2+5+6=\\textbf{(E) } 13.$ ",
    "FL_statement": "theorem amc12a_2020_p10\n  (n : ℕ)\n  (h₀ : 0 < n)\n  (h₁ : Real.logb 2 (Real.logb 16 n) = Real.logb 4 (Real.logb 4 n)) :\n  (Nat.digits 10 n).sum = 13 :=",
    "Generated_proof": [
        "-- AMC12A_2020_P10\n--\n-- This theorem proves that there exists a unique positive integer n\n-- such that log2(log16(n)) = log4(log4(n)).\n-- It then calculates the sum of the digits of n and proves\n-- that it is equal to 13.\n\ntheorem amc12a_2020_p10\n  (n : ℕ)\n  (h₀ : 0 < n)\n  (h₁ : Real.logb 2 (Real.logb 16 n) = Real.logb 4 (Real.logb 4 n)) :\n  (Nat.digits 10 n).sum = 13 := by\n  classical\n    simp [*, Fin.prod_univ_sum_index_natCast h₀.ne', ← Nat.castInj h₀.ne']\n    split_ifs <;>\n      try simp_rw [_root_.logb _root_.logb_of_nonneg (Nat.natAbs_cast_ne_zero.mpr h₀.ne')] <;>\n            decide <;>\n            try rfl"
    ]
}