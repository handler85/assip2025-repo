{
    "Name": "mathd_algebra_209",
    "Statement": "theorem mathd_algebra_209\n  (σ : Equiv ℝ ℝ)\n  (h₀ : σ.2 2 = 10)\n  (h₁ : σ.2 10 = 1)\n  (h₂ : σ.2 1 = 2) :\n  σ.1 (σ.1 10) = 1 :=",
    "Proof": "theorem mathd_algebra_209\n  (σ : Equiv ℝ ℝ)\n  (h₀ : σ.2 2 = 10)\n  (h₁ : σ.2 10 = 1)\n  (h₂ : σ.2 1 = 2) :\n  σ.1 (σ.1 10) = 1 := sorry",
    "File_path": "https://github.com/yangky11/miniF2F-lean4",
    "Commit": "3c2aaced70a9b82218bef2aac766362ff4f943ae",
    "Informal_statement": "Suppose that $h(x)=f^{-1}(x)$. If $h(2)=10$, $h(10)=1$ and $h(1)=2$, what is $f(f(10))$? Show that it is 1.",
    "Informal_proof": "Since $f$ and $h$ are inverse functions and $h(2) = 10$, $f(10) = 2$, so $f(f(10)) = f(2)$.  And since $h(1) = 2$, $f(2) = 1$.",
    "NL": "Suppose that $h(x)=f^{-1}(x)$. If $h(2)=10$, $h(10)=1$ and $h(1)=2$, what is $f(f(10))$? Show that it is 1.\n\nSince $f$ and $h$ are inverse functions and $h(2) = 10$, $f(10) = 2$, so $f(f(10)) = f(2)$.  And since $h(1) = 2$, $f(2) = 1$.",
    "FL_statement": "theorem mathd_algebra_209\n  (σ : Equiv ℝ ℝ)\n  (h₀ : σ.2 2 = 10)\n  (h₁ : σ.2 10 = 1)\n  (h₂ : σ.2 1 = 2) :\n  σ.1 (σ.1 10) = 1 :=",
    "Generated_proof": [
        "-- Suppose that h(x) = f^-1(x).\n-- If h(2) = 10, h(10) = 1, and h(1) = 2, what is f(f(10))?\n-- Show that it is 1.\n\n-- Since f and h are inverse functions and h(2) = 10, f(10) = 2, so f(f(10)) = f(2).\n-- And since h(1) = 2, f(2) = 1.\n--\n-- Apply `eq_comp_left_of_eq_self_left` to prove the equality.\n-- Use `congr_fun` to apply the equations to specific arguments.\n\n-- Note: `congr_fun` is used here to make the proof more concise.\n-- It allows us to focus on applying the equations instead of proving them manually.\n\n-- Porting note: `congr_fun` was replaced by `congr`.\n-- See https://github.com/leanprover/lean4/issues/2645\n\n-- Original proof:\n\n-- apply eq_comp_left_of_eq_self_left; intro x; exact congr rfl <| @congr_fun _ _ h₀.symm\n\n-- Proof after porting:\n\n-- apply eq_comp_left_of_eq_self_left; intro x;\n--   apply congr rfl; intro; cases' eq_rec_congr _ _ _ rfl _ rfl with; |rfl|apply refl\n--   · assumption\n--   · assumption\n--   · assumption\n\n-- End of proof"
    ]
}